# About BUILDCONFIG.gn
#
# This file will be used to set up the build file execution environment for each toolchain.
# GN will find this file by variable 'buildconfig' in the .gn file.
# Any arguments, variables, defaults, etc. set up in this file will be visible to all files
# in the build.

# host_(os|cpu): the OS/CPU GN is running on, default: detected by GN
#     host_os:  "linux", "mac", "win"
#     host_cpu: "x86", "x64"
# current_(os|cpu): the OS/CPU of the current toolchain, default: ""
#     current_os: "", "linux", "mac", "win", "ios", "android", "chromeos", "nacl"
#     current_cpu: "", "x86", "x64", "arm", "arm64", "mipsel"
# target_(os|cpu):  the OS/CPU the build is to run on, default: ""
#     target_os: "", "linux", "mac", "win", "ios", "android", "chromeos", "nacl"
#     target_cpu: "", "x86", "x64", "arm", "arm64", "mipsel"

if (target_os == "") {
  target_os = host_os
}
if (target_cpu == "") {
  target_cpu = host_cpu
}
if (current_cpu == "") {
  current_cpu = target_cpu
}
if (current_os == "") {
  current_os = target_os
}

# handy constants
is_linux = host_os == "linux" && current_os == "linux" && target_os == "linux"
is_mac   = host_os == "mac" && current_os == "mac" && target_os == "mac"

# runtime resource directory (under {{root_out_dir}})
runtime_dir = "runtime"

# Do not handle cross-compiling
assert(current_os == host_os,   "cross-compiling not supported.")
assert(current_cpu == host_cpu, "cross-compiling not supported.")
assert(target_os == host_os,    "cross-compiling not supported.")
assert(target_cpu == host_cpu,  "cross-compiling not supported.")
# Do not handle Windows
assert(is_linux || is_mac, "only Linux and Mac are supported")
# Do not handle CPUs other than "x64"
assert(host_cpu == "x64",  "only x64 architecture is supported.")

# All binary targets will get this list of configs by default.
_compiler_defaults = [ "//utils/buildtools/configs:compiler_defaults" ]
set_defaults("executable") {
  configs = _compiler_defaults
  configs += [ "//utils/buildtools/configs:executable_config" ]
}
set_defaults("static_library") {
  configs = _compiler_defaults
}
set_defaults("shared_library") {
  configs = _compiler_defaults
}
set_defaults("source_set") {
  configs = _compiler_defaults
}

set_default_toolchain("//utils/buildtools/configs/toolchain:clang")
